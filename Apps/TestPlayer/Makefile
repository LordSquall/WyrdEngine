# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ../../bin/Debug/TestPlayer
  TARGET = $(TARGETDIR)/TestPlayer
  OBJDIR = ../../obj/Debug/TestPlayer
  DEFINES += -DWYRD_DEBUG
  INCLUDES += -Isrc -I../../TestPlayer/vendor/glad/include -I../../Wyrd/src -I../../dependencies/GLFW/include -I../../Wyrd/vendor/glad/include -I../../dependencies/jsonxx -I../../dependencies/soil/src -I../../dependencies/glm -I/usr/include/mono-2.0 -I../../dependencies/spdlog/include -I../../dependencies/uuid/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../lib/Debug/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Debug/glad/libglad.a -lglfw3 -ldl -lSOIL -lcrossguid -luuid -lspdlog -lmono-2.0 -lpthread
  LDDEPS += ../../lib/Debug/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Debug/glad/libglad.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../buildsystem/linux/bin/Debug/glad -L../../buildsystem/linux/bin/Debug/jsonxx -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ../../bin/Release/TestPlayer
  TARGET = $(TARGETDIR)/TestPlayer
  OBJDIR = ../../obj/Release/TestPlayer
  DEFINES += -DWYRD_RELEASE
  INCLUDES += -Isrc -I../../TestPlayer/vendor/glad/include -I../../Wyrd/src -I../../dependencies/GLFW/include -I../../Wyrd/vendor/glad/include -I../../dependencies/jsonxx -I../../dependencies/soil/src -I../../dependencies/glm -I/usr/include/mono-2.0 -I../../dependencies/spdlog/include -I../../dependencies/uuid/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../lib/Release/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Release/glad/libglad.a -lglfw3 -ldl -lSOIL -lcrossguid -luuid -lspdlog -lmono-2.0 -lpthread
  LDDEPS += ../../lib/Release/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Release/glad/libglad.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../buildsystem/linux/bin/Debug/glad -L../../buildsystem/linux/bin/Debug/jsonxx -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),distribution)
  RESCOMP = windres
  TARGETDIR = ../../bin/Distribution/TestPlayer
  TARGET = $(TARGETDIR)/TestPlayer
  OBJDIR = ../../obj/Distribution/TestPlayer
  DEFINES += -DWYRD_DISTRIBUTION
  INCLUDES += -Isrc -I../../TestPlayer/vendor/glad/include -I../../Wyrd/src -I../../dependencies/GLFW/include -I../../Wyrd/vendor/glad/include -I../../dependencies/jsonxx -I../../dependencies/soil/src -I../../dependencies/glm -I/usr/include/mono-2.0 -I../../dependencies/spdlog/include -I../../dependencies/uuid/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../../lib/Distribution/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Distribution/glad/libglad.a -lglfw3 -ldl -lSOIL -lcrossguid -luuid -lspdlog -lmono-2.0 -lpthread
  LDDEPS += ../../lib/Distribution/Wyrd/libWyrd.a ../../buildsystem/linux/bin/Distribution/glad/libglad.a
  ALL_LDFLAGS += $(LDFLAGS) -L../../buildsystem/linux/bin/Debug/glad -L../../buildsystem/linux/bin/Debug/jsonxx -L/usr/lib64 -m64
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/glad.o \
	$(OBJDIR)/ComponentSerialiserFactory.o \
	$(OBJDIR)/ImportManager.o \
	$(OBJDIR)/ControlLayer.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/SceneManager.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking TestPlayer
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning TestPlayer
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/glad.o: ../../Wyrd/vendor/glad/src/glad.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ComponentSerialiserFactory.o: src/import/ComponentSerialiserFactory.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImportManager.o: src/import/ImportManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ControlLayer.o: src/layers/ControlLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneManager.o: src/managers/SceneManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif